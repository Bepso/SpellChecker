{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianflincklindstrom/Documents/Netlight-AvA/SpellChecker/my-react-app/src/component/SpellChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet counter = 0;\nexport default function SpellChecker() {\n  _s();\n  const [word, setWordTerm] = useState('');\n  const [text, setText] = useState('');\n  const [typos, setTypos] = useState([]);\n  const URL = 'http://localhost:8080';\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      const customConfig = {\n        headers: {\n          'Content-Type': 'text/plain'\n        }\n      };\n      if (word) {\n        axios.post(URL + \"/message\", word, customConfig).then(res => {\n          res.data.issues.map(typo => console.log(typo.match.beginOffset + \" \" + typo.match.endOffset + \" \" + typo.match.replacement[0] + \" \" + typo.match.surface + \" \" + typo.type));\n          setTypos(res.data.issues.map(typo => ({\n            word: typo.match.surface,\n            start: typo.match.beginOffset,\n            end: typo.match.endOffset,\n            suggestion: typo.match.replacement[0],\n            type: typo.type\n          })));\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }, [word]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"float-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-child\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        autoFocus: true,\n        type: \"text\",\n        autoComplete: \"off\",\n        className: \"live-type-field\",\n        placeholder: \"Type here...\",\n        value: text,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          fontFamily: 'Futura',\n          fontSize: \"18px\"\n        },\n        onChange: e => setWordTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-child\",\n      children: typos.map((typo, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [\"Word: \", typo.word, \" | Start: \", typo.start, \" | End: \", typo.end, \" | Suggestion: \", typo.suggestion, \"| Type: \", typo.type]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n_s(SpellChecker, \"h3AG/5BSoJqSO+shDDWEgzwX7XU=\");\n_c = SpellChecker;\nvar _c;\n$RefreshReg$(_c, \"SpellChecker\");","map":{"version":3,"names":["React","useState","useEffect","axios","counter","SpellChecker","word","setWordTerm","text","setText","typos","setTypos","URL","delayDebounceFn","setTimeout","customConfig","headers","post","then","res","data","issues","map","typo","console","log","match","beginOffset","endOffset","replacement","surface","type","start","end","suggestion","catch","error","clearTimeout","width","height","fontFamily","fontSize","e","target","value","index"],"sources":["/Users/sebastianflincklindstrom/Documents/Netlight-AvA/SpellChecker/my-react-app/src/component/SpellChecker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nlet counter = 0\n\nexport default function SpellChecker() {\n    const [word, setWordTerm] = useState('')\n    const [text, setText] = useState('');\n    const [typos, setTypos] = useState([]);\n    \n    const URL = 'http://localhost:8080'\n    useEffect(() => {\n      const delayDebounceFn = setTimeout(() => {\n        const customConfig = {\n          headers: {\n          'Content-Type': 'text/plain'\n          }\n        }\n        if(word){\n          axios.post(URL+\"/message\", word, customConfig).then(res => {\n            res.data.issues.map(typo => (\n              console.log(typo.match.beginOffset + \" \" + typo.match.endOffset + \" \" + typo.match.replacement[0] + \" \" +typo.match.surface + \" \" +typo.type)\n            ));\n            setTypos(res.data.issues.map(typo => ({\n              word: typo.match.surface,\n              start: typo.match.beginOffset,\n              end: typo.match.endOffset,\n              suggestion: typo.match.replacement[0],\n              type: typo.type\n            })));\n          }).catch(error => {\n            console.error(error);\n          });\n        }\n        \n      }, 1000)\n      return () => clearTimeout(delayDebounceFn)\n    }, [word])\n  \n    return (\n      <div className=\"float-container\">\n\n        <div className=\"float-child\">\n          <textarea\n            autoFocus\n            type='text'\n            autoComplete='off'\n            className='live-type-field'\n            placeholder='Type here...'\n            value={text}\n            style={{width: \"100%\", height: \"100%\", fontFamily: 'Futura', fontSize: \"18px\"}}\n            onChange={(e) => \n              setWordTerm(e.target.value)}\n          />\n        </div>\n    \n        <div className=\"float-child\">\n        {typos.map((typo, index) => (\n          <button key={index}>\n            Word: {typo.word} | Start: {typo.start} | End: {typo.end} | Suggestion: {typo.suggestion}| Type: {typo.type}\n          </button>\n        ))}\n        </div>\n      </div>\n      \n    )\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}