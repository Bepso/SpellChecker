{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianflincklindstrom/Documents/Netlight-AvA/SpellChecker/frontend/src/components/SpellChecker/SpellChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SpellChecker.css';\nimport TypoBlock from '../TypoBlock/TypoBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SpellChecker() {\n  _s();\n  const [sentence, setSentence] = useState('');\n  const [text, setText] = useState('');\n  const [typos, setTypos] = useState([]);\n  const [isClickProcessing, setIsClickProcessing] = useState(false);\n  const URL = 'http://localhost:8080';\n  const handleTextChange = e => {\n    setText(e.target.value);\n    setSentence(e.target.value);\n  };\n  const handleSuggestionClick = (typo, suggestion) => {\n    if (!isClickProcessing) {\n      setIsClickProcessing(true);\n      setText(text => {\n        const newText = text.slice(0, typo.start) + suggestion + text.slice(typo.end);\n        setSentence(newText);\n        setIsClickProcessing(false);\n        return newText;\n      });\n      setTypos(typos.filter(item => item !== typo));\n    }\n  };\n  useEffect(() => {\n    const customConfig = {\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    };\n    const delayDebounceFn = setTimeout(async () => {\n      if (sentence) {\n        try {\n          const res = await axios.post(URL + \"/message\", sentence, customConfig);\n          setTypos(res.data.issues.map(typo => ({\n            word: typo.match.surface,\n            start: typo.match.beginOffset,\n            end: typo.match.endOffset,\n            suggestion: typo.match.replacement,\n            type: typo.type\n          })));\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }, [sentence]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"float-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-child\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        autoFocus: true,\n        type: \"text\",\n        autoComplete: \"off\",\n        className: \"live-type-field\",\n        placeholder: \"Type here...\",\n        value: text,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          fontFamily: 'Futura',\n          fontSize: \"18px\"\n        },\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-child\",\n      children: typos.map((typo, index) => /*#__PURE__*/_jsxDEV(TypoBlock, {\n        typo: typo,\n        handleSuggestionClick: handleSuggestionClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n_s(SpellChecker, \"9RoX87Y/Z9X5AMC0tj5uLDRlqGU=\");\n_c = SpellChecker;\nvar _c;\n$RefreshReg$(_c, \"SpellChecker\");","map":{"version":3,"names":["React","useState","useEffect","axios","TypoBlock","SpellChecker","sentence","setSentence","text","setText","typos","setTypos","isClickProcessing","setIsClickProcessing","URL","handleTextChange","e","target","value","handleSuggestionClick","typo","suggestion","newText","slice","start","end","filter","item","customConfig","headers","delayDebounceFn","setTimeout","res","post","data","issues","map","word","match","surface","beginOffset","endOffset","replacement","type","error","console","clearTimeout","width","height","fontFamily","fontSize","index"],"sources":["/Users/sebastianflincklindstrom/Documents/Netlight-AvA/SpellChecker/frontend/src/components/SpellChecker/SpellChecker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SpellChecker.css';\nimport TypoBlock from '../TypoBlock/TypoBlock';\n\nexport default function SpellChecker() {\n    const [sentence, setSentence] = useState('')\n    const [text, setText] = useState('');\n    const [typos, setTypos] = useState([]);\n    const [isClickProcessing, setIsClickProcessing] = useState(false);\n    \n    const URL = 'http://localhost:8080'\n    const handleTextChange = e => {\n      setText(e.target.value);\n      setSentence(e.target.value);\n    };\n    const handleSuggestionClick = (typo, suggestion) => {\n      if (!isClickProcessing) {\n        setIsClickProcessing(true);\n        setText(text => {\n          const newText = text.slice(0, typo.start) + suggestion + text.slice(typo.end);\n          setSentence(newText);\n          setIsClickProcessing(false);\n          return newText;\n        });\n        setTypos(typos.filter(item => item !== typo));\n      }\n    };\n\n    useEffect(() => {\n      const customConfig = {\n        headers: {\n        'Content-Type': 'text/plain'\n        }\n      }\n      const delayDebounceFn = setTimeout(async () => {\n        if(sentence){\n          try {\n            const res = await axios.post(URL + \"/message\", sentence, customConfig);\n            setTypos(\n              res.data.issues.map((typo) => ({\n                word: typo.match.surface,\n                start: typo.match.beginOffset,\n                end: typo.match.endOffset,\n                suggestion: typo.match.replacement,\n                type: typo.type,\n              }))\n            );\n          } catch (error) {\n            console.error(error);\n          }\n        }\n        \n      }, 1000)\n      return () => clearTimeout(delayDebounceFn)\n    }, [sentence])\n  \n    return (\n      <div className=\"float-container\">\n\n        <div className=\"float-child\">\n          <textarea\n            autoFocus\n            type='text'\n            autoComplete='off'\n            className='live-type-field'\n            placeholder='Type here...'\n            value={text}\n            style={{width: \"100%\", height: \"100%\", fontFamily: 'Futura', fontSize: \"18px\"}}\n            onChange={handleTextChange}\n          />\n        </div>\n    \n        <div className=\"float-child\">\n        {typos.map((typo, index) => (\n          <TypoBlock key={index} typo={typo} handleSuggestionClick={handleSuggestionClick} />\n        ))}\n        </div>\n      </div>\n      \n    )\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}